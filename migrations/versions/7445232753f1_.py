"""empty message

Revision ID: 7445232753f1
Revises: dd941eade02b
Create Date: 2025-04-18 18:48:16.510532

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7445232753f1'
down_revision = 'dd941eade02b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teacher')
    op.drop_table('student')
    op.drop_table('attendancelog')
    op.drop_table('attendance_session')
    op.drop_table('course')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
    sa.Column('course_id', sa.INTEGER(), server_default=sa.text("nextval('course_course_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('course_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('sessions', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('course_id', name='course_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('attendance_session',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('teacher_id', sa.VARCHAR(length=11), autoincrement=False, nullable=False),
    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ip_address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('session_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.course_id'], name='attendance_session_course_id_fkey'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.teacher_id'], name='attendance_session_teacher_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='attendance_session_pkey')
    )
    op.create_table('attendancelog',
    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('teacher_id', sa.VARCHAR(length=11), autoincrement=False, nullable=False),
    sa.Column('student_id', sa.VARCHAR(length=11), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.course_id'], name='attendancelog_course_id_fkey'),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], name='attendancelog_student_id_fkey'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.teacher_id'], name='attendancelog_teacher_id_fkey')
    )
    op.create_table('student',
    sa.Column('student_id', sa.VARCHAR(length=11), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('face_encoding', postgresql.ARRAY(sa.DOUBLE_PRECISION(precision=53)), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='student_pkey'),
    sa.UniqueConstraint('email', name='student_email_key'),
    sa.UniqueConstraint('student_id', name='student_student_id_key'),
    sa.UniqueConstraint('student_id', name='uq_student_id')
    )
    op.create_table('teacher',
    sa.Column('teacher_id', sa.VARCHAR(length=11), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('teacher_id', name='teacher_pkey'),
    sa.UniqueConstraint('teacher_id', name='teacher_teacher_id_key'),
    sa.UniqueConstraint('teacher_id', name='uq_teacher_id')
    )
    # ### end Alembic commands ###
